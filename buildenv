# bump: npth-version /NPTH_VERSION="(.*)"/ https://gnupg.org/ftp/gcrypt/npth/|re:/href="npth-([\d.]+).tar.bz2"/$1/|semver:*
NPTH_VERSION="1.8"

export ZOPEN_BUILD_LINE="STABLE"
export ZOPEN_CATEGORIES="security"
export ZOPEN_STABLE_URL="https://gnupg.org/ftp/gcrypt/npth/npth-${NPTH_VERSION}.tar.bz2"
export ZOPEN_STABLE_DEPS="make bzip2 tar curl perl automake autoconf m4 sed gettext zoslib diffutils libgpgerror openssl"
export ZOPEN_INSTALL="zopen_install"
export ZOPEN_COMP=CLANG
export ZOPEN_SKIP_ZOSLIB_ENV_HOOK=1
export ZOPEN_EXTRA_CPPFLAGS="-mzos-target=zosv2r5 -march=z13"
export ZOPEN_SYSTEM_PREREQS="zos25"

zopen_check_results()
{
  dir="$1"
  pfx="$2"
  chk="$1/$2_check.log"
  failures=$(egrep "^FAIL:" $chk | wc -l)
  skipped=$(egrep "^SKIP:" $chk | wc -l)
  passed=$(egrep "^PASS:" $chk | wc -l)
  totalTests=$(($failures+$skipped+$passed))

  # Echo the following information to gauge build health
cat <<ZZ
actualFailures:${failures}
totalTests:${totalTests}
expectedFailures:0
ZZ
}

zopen_append_to_env()
{
cat <<ZZ
if [ ! -z "\$ZOPEN_IN_ZOPEN_BUILD" ]; then
  export ZOPEN_EXTRA_CFLAGS="\${ZOPEN_EXTRA_CFLAGS} -mzos-target=zosv2r5 -march=z13 -I\$PWD/include"
  export ZOPEN_SYSTEM_PREREQS="zos25"
  export ZOPEN_EXTRA_CXXFLAGS="\${ZOPEN_EXTRA_CXXFLAGS} -I\$PWD/include"
  export ZOPEN_EXTRA_LDFLAGS="\${ZOPEN_EXTRA_LDFLAGS} -L\$PWD/lib"
  export ZOPEN_EXTRA_LIBS="\${ZOPEN_EXTRA_LIBS} -lnpth"
fi
ZZ
}

zopen_append_to_setup()
{
  # echo commands that will run when installing via setup.sh
}

zopen_get_version()
{
  echo "$NPTH_VERSION"
}

zopen_install()
{
  make "$@"
  mkdir -p $ZOPEN_INSTALL_DIR/bin
  cp npth-config $ZOPEN_INSTALL_DIR/bin/
}
